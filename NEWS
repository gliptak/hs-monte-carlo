Changes in 0.6:

* Major overhaul. A lot of client code will break.

* Replaced the old MC type with a monad transformer,
  requiring the base monad to be an instance of PrimMonad.

* Removed the MCT type.

* Removed the MonadMC class.

* Removed unsafe operations relying on lazy IO (unsafeInterleaveIO),
  or replaced them by safe, strict versions.

* Added new fold operation foldMC.

* Refactored and simplified sampling and shuffling functions.  The
  "sampleSubset" functions are strict now.

* Hide Data.Summary.Utils, and remove Data.Summary.

* Change Data.Summary.Bool and Data.Summary.Double interfaces to mimic
  the Data.Set functions.  Like Data.Set, these modules should now
  be used with qualified imports.

* Removed NFData instances from Summary types; add Eq instances.

* Updated examples.


Changes in 0.5:

* Clark Gaebel added Monoid and NFData instances to Summary types

* Clark Gaebel added liftMCT to the export list

* Casper Holmgreen fixed bug in Data.Summary.Bool Show instance

* Gábor Lipták added test target to cabal


Changes in 0.4.3:

* New cabal test use: cabal configure --enable-tests --enable-library-coverage

Changes in 0.4.2:

* gliptak added compile fixes for ghc 7.4

* Joyn Tyree added compile fixes for ghc 7.2


Changes in 0.4.1:

* Get project to compile with ghc7.


Changes in 0.4:

* Felipe Lessa added applicative instances to GSL's MC and MCT.

* Felipe Lessa added many distributions: beta, logistic, Pareto, Weibull, gamma,
  multinomial and Dirichlet distributions are now available.

* Change argument order of subset sampling functions.

* Add weighted sampling without replacement.


Changes in 0.3.1:

* Change upper bound on vector dependency.


Changes in 0.3:

* Add strict versions of sampleSubset, sampleIntSubset, and shuffleInt.

* Port to vector-0.6.0.

* Add Exponential and Levy alpha-Stable distributions.

* Add Summary.Bool for indicators.

* Move Summary to Data.Summary

* Introduce `repeatMC`, which produces an infinite (lazy) stream of values, and
  `replicateMC`, which produces a lazy list of specified length.

* Remove `repeatMC/repeatMCWith`.

* Build fix for 6.8.2 from Robert Gunst.

* The function `sample`, `sampleWithWeights`, `sampleSubset`, and
  `shuffle` no longer require that you explicitly pass in the length.

* The pure RNG is now a newtype, so you can't use the functions from
  GLS.Random.Gen on it anymore.

* The internals of the monad have been cleaned up.  IO is used internally
  instead of `seq` calls and `unsafePerformIO` everywhere.  This results in
  a modest performance boost.


Changes in 0.2:

* More general type class, MonadMC, which allows all the functions to work
  in both MC and MCT monads.

* Functions to sample from discrete distributions.

* Functions to sample subsets

